name: Build and Push Music API Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'music-api/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'music-api/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/music-api

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./music-api
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest httpx

    - name: Run tests
      run: |
        # Add your test commands here
        # pytest tests/ || echo "No tests found, skipping..."
        python -c "import main; print('API module loads successfully')"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./music-api
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

      # Login to Github Container Registry
    - name: Log in to GHCR with GITHUB_TOKEN
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./music-api
        file: ./music-api/Dockerfile
        push: true
        tags: ${{ env.IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
